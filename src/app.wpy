<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
page{
  background: #f5f7f9
}
.section{
  display: flex;
  flex-direction:row;
  // width: 100%;
   line-height: 70rpx;
  height:auto;
  padding:0 20rpx 20rpx 20rpx
}
.section__title{
  font-family: BlinkMacSystemFont,-apple-system,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",Helvetica,Arial,sans-serif;
  color: #606266;
  // display: block;
  width: 200rpx;
  font-size: 30rpx;
  font-weight: 700;
}
.apInput{
    background-color: white;
    border: 2px solid #eee;
    box-sizing: border-box;
    border-radius: 15rpx;
    color: #363636;
    width:100%;
    font-size: 30rpx;
    line-height: 70rpx;
    height:70rpx;
    padding-left:20rpx;
    padding-right:20rpx;
    // margin-left: 20rpx;
}
.block_title{
  display: flex;
  flex-direction: row;
  align-items: center;
}
.blockBox{
  width: 20rpx;
  height: 40rpx;
  background: #2d8cf0 
}
.apTextarea{
    height:140rpx;
}
.apInput:hover,.apTextarea:hover{    
  border-color: #409eff;
}
.apText{
    font-weight: 500;
    color: #606266;
    padding-left:20rpx;
    font-size: 32rpx;
    line-height: 70rpx;
}
.lightBg{
    background: #f8f8f9;
}
.blackFont{
  color: #515a6e;
  font-weight: bold;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/login',
      'pages/aptable',
      'pages/index',
      'pages/approval',
      'pages/bill'
    ],
    window: {
      navigationBarBackgroundColor:"#515a6e",
      navigationBarTitleText: 'WeChat',
      backgroundColor:"#F8F8F8"

    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify');
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
